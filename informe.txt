INFORME PRACTICA 2 ALGORITMOS
-----------------------------

******NOMBRES********
--------------------

Matías Alberto González Aliendre
Pablo Jesús Herrero Díaz
Tiago Da Costa Teixeira Veloso e Volta


ORDENACION POR INSERCION Y ORDENACION RAPIDA
--------------------------------------------

****INTRODUCCION*****
--------------------

En esta práctica de algoritmos, se implementan y comparan dos algoritmos de ordenación:
la ordenación por inserción y la ordenación rápida con selección aleatoria del pivote. 
El objetivo es analizar su eficencia al ordenar vectores de números enteros en tres casos 
diferentes: un vector ordenado ascendentemente, un vector ordenado descendentemente y un 
vector desordenado aleatoriamente.
Para cada caso, se miden y comparan los tiempos de ejecución de ambos algoritmos, permitiendo
así evaluar su eficiencia con diferentes conjuntos de datos.

****MAQUINA*******
------------------

Procesador: AMD Ryzen 5 4600H
Memoria: 16,0 GB
Modelo del Sistema: HP Pavilon Gaming Laptop 15-ec1xxx
Arquitectura: x86-64
Sistema Operativo: Ubuntu 22.04.5 LTS
Kernel: Linux 6.8.0-40-generic
Capacidad Disco: 408 Gb

UNIDADES DE TIEMPO UTILIZADAS
-----------------------------

En este informe todos los tiempos de ejecución de los algoritmos se midieron en microssegundos (μs).
Para garantizar la precisión de las mediciones, se estableció un umbral de confianza de 
500 microsegundos. Si el tiempo de ejecución es menor a este valor el algoritmo se repite
k veces (k= 1000) y se obtiene el promedio dividiendo el tiempo total entre las ejecuciones. 
Los casos donde se aplicó este procedimiento están marcados con un asterisco en las tablas.


   ***** Test de Ordenación por inserción*****
   -------------------------------------------
Ordenacion por inserción con inicialización aleatoria
-15, -8, 5, -10, -5, -1, -5, -1, 4, -3, 2, 17, 17, 14, -7, -13, -4
ordenado? 0
ordenando...
-15, -13, -10, -8, -7, -5, -5, -4, -3, -1, -1, 2, 4, 5, 14, 17, 17
ordenado? 1

Ordenacion por inserción con inicialización descendente
17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
ordenado? 0
ordenando...
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
ordenado? 1

Ordenacion por inserción con inicialización ascendente
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
ordenado? 1
ordenando...
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
ordenado? 1


  ***** Test por Ordenación rápida *****
  --------------------------------------

Ordenacion rapida auxiliar con inicialización aleatoria
-2, -11, -3, -11, 15, -9, -12, -8, 1, 8, 2, -3, -16, 16, -5, -11, 2
ordenado? 0
ordenando...
-16, -12, -11, -11, -11, -9, -8, -5, -3, -3, -2, 1, 2, 2, 8, 15, 16
ordenado? 1

Ordenacion rapida auxiliar con inicialización descendente
17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
ordenado? 0
ordenando...
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
ordenado? 1

Ordenacion rapida auxiliar con inicialización ascendente
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
ordenado? 1
ordenando...
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
ordenado? 1


******TABLAS******
------------------	

Ordenación por inserción con inicialización ascendente

            n            t(n)         t(n)/n^0.75     t(n)/n^'0.95         t(n)/n^1.15
*         500           4.1820          0.039551          0.011412            0.003293
*        1000           7.6400          0.042963          0.010792            0.002711
*        2000          15.1550          0.050674          0.011081            0.002423
*        4000          30.3490          0.060339          0.011486            0.002187
*        8000          60.7240          0.071787          0.011897            0.001972
*       16000         121.2990          0.085264          0.012301            0.001775
*       32000         242.4080          0.101317          0.012725            0.001598

n^0.75 es la cota subestimada
n^0.95 es la cota ajustada y la Cte = 0.012
n^1.15 es la cota sobreestimada

Ordenación por inserción con inicialización descendente

            n            t(n)          t(n)/n^1.8       t(n)/n^2.0          t(n)/n^2.2
          500         593.0000          0.008221          0.002372            0.000684
         1000        2370.0000          0.009435          0.002370            0.000595
         2000        9415.0000          0.010764          0.002354            0.000515
         4000       37806.0000          0.012412          0.002363            0.000450
         8000      150548.0000          0.014194          0.002352            0.000390
        16000      602055.0000          0.016301          0.002352            0.000339
        32000     2421475.0000          0.018828          0.002365            0.000297

n^1.8 es la cota subestimada
n^2.0 es la cota ajustada y la Cte = 0.0024
n^2.2 es la cota sobreestimada

Ordenación por inserción con inicialización aleatorio

            n            t(n)          t(n)/n^1.8       t(n)/n^2.0          t(n)/n^2.2
*         500         289.3110          0.004011          0.001157            0.000334
         1000        1119.0000          0.004455          0.001119            0.000281
         2000        4367.0000          0.004993          0.001092            0.000239
         4000       17340.0000          0.005693          0.001084            0.000206
         8000       69369.0000          0.006540          0.001084            0.000180
        16000      274811.0000          0.007441          0.001073            0.000155
        32000     1145542.0000          0.008907          0.001119            0.000141

n^1.8 es la cota subestimada
n^2.0 es la cota ajustada y la Cte = 0.0011
n^2.2 es la cota sobreestimada


Ordenación rápida con inicialización ascendente

            n            t(n)          t(n)/n^0.9       t(n)/n^1.1          t(n)/n^1.3
*         500          13.9960          0.052111          0.015036            0.004339
*        1000          30.6540          0.061163          0.015363            0.003859
*        2000          66.6670          0.071283          0.015588            0.003409
*        4000         144.0750          0.082553          0.015715            0.002992
*        8000         309.4250          0.095011          0.015745            0.002609
        16000         614.0000          0.101032          0.014576            0.002103
        32000        1298.0000          0.114456          0.014375            0.001805

n^0.9 es la cota subestimada
n^1.1 es la cota ajustada y la Cte = 0.015
n^1.3 es la cota sobreestimada

Ordenación rápida con inicialización descendente

            n            t(n)          t(n)/n^1.0      t(n)/n^1.15          t(n)/n^1.3
*         500          14.4230          0.028846          0.011356            0.004471
*        1000          31.9300          0.031930          0.011329            0.004020
*        2000          69.8720          0.034936          0.011172            0.003572
*        4000         152.0320          0.038008          0.010954            0.003157
*        8000         328.4800          0.041060          0.010665            0.002770
        16000         679.0000          0.042438          0.009934            0.002325
        32000        1468.0000          0.045875          0.009678            0.002042

n^0.9 es la cota subestimada
n^1.1 es la cota ajustada y la Cte = 0.011
n^1.3 es la cota sobreestimada

Ordenación rápida con inicialización aleatoria

            n            t(n)         t(n)/n^0.84      t(n)/n^1.04         t(n)/n^1.24
*         500          66.0860          0.357252          0.103081            0.029743
*        1000         141.6270          0.427707          0.107435            0.026986
*        2000         309.7920          0.522643          0.114288            0.024992
         4000         588.0000          0.554175          0.105496            0.020083
         8000        1258.0000          0.662346          0.109766            0.018191
        16000        2690.0000          0.791210          0.114148            0.016468
        32000        5703.0000          0.937082          0.117692            0.014781


n^0.84 es la cota subestimada
n^1.04 es la cota ajustada y la Cte = 0.11
n^1.24 es la cota sobreestimada


****CONCLUSIONES****
--------------------

Basándonos en los datos y los tiempos obtenidos de las pruebas efectuadas, podemos concluir que:

El algoritmo de inserción, es sencillo de implementar y tiene un rendimiento aceptable en vectores pequeños o que ya están parcialmente ordenados, pero se degrada rápidamente en rendimiento cuando se enfrenta a vectores más grandes o que están totalmente desordenados.

El algoritmo de ordenación rápida, por otro lado, no tiene una implementación tan sencilla, pero mostró una mayor eficiencia general y un rendimiento más estable en todas las configuraciones de datos, sobretodo en vectores de gran tamaño, destacándose especialmente en la ordenación aleatória.

Las cotas de ambos algoritmos muestran un comportamiento coherente y esperado en todas sus configuraciones. La cota subestimada crece de forma constante, la cota sobrestimada decrece de forma constante, y la cota ajustada se mantiene durante todas las mediciones.




